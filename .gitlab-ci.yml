workflow:
  rules:
    - if: $CI_COMMIT_TAG
      when: never # Skip pipeline for tags
    - if: $CI_COMMIT_BRANCH
      when: always # Run pipeline for all branches

stages:
  - gh:bootstrap
  - code:release
  - tf:deploy

variables:
  CHORE_BOOTSTRAP_COMMIT: '/chore!: bootstrap/'
  CHORE_DEPLOY_COMMIT: '/chore!: deploy/'
  TF_ROOT: "./tf"
  TF_STATE_NAME: default-do-not-use
  TERRAFORM_VERSION: 1.5

gh:bootstrap:
  image: alpine:latest
  stage: gh:bootstrap
  before_script:
    - apk add --no-cache bash curl jq
  script:
    - chmod +x $CI_PROJECT_DIR/scripts/bootstrap-github.sh
    - $CI_PROJECT_DIR/scripts/bootstrap-github.sh
  # Triggers only from main with the key word bootstrap
  rules:
    - if:
        '$CI_COMMIT_MESSAGE =~ $CHORE_BOOTSTRAP_COMMIT && $CI_COMMIT_BRANCH ==
        $CI_DEFAULT_BRANCH'
      when: always

code:release:
  stage: code:release
  image: node:lts
  variables:
    GL_TOKEN: ${RELEASE_BOT_ACCESS_TOKEN}
  before_script:
    - |
      npm i -g \
      semantic-release@24.0.0 \
      @semantic-release/commit-analyzer \
      @semantic-release/release-notes-generator \
      @semantic-release/changelog \
      @semantic-release/git \
      @semantic-release/exec \
      conventional-changelog-conventionalcommits
  script:
    - npx semantic-release --ci
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

tf:apply:
  image: "$CI_TEMPLATE_REGISTRY_HOST/gitlab-org/terraform-images/releases/${TERRAFORM_VERSION}"
  stage: tf:deploy
  before_script:
    - |
      echo "===> Setting up AWS CLI..."
      mkdir -p ~/.aws
      echo "$AWS_CONFIG_FILE_VAR" | sed 's/\r$//' | base64 -d > ~/.aws/config
      apk add --no-cache aws-cli
    - git config --global url."https://gitlab-ci-token:${X_TF_RW_TOKEN}@${CI_SERVER_HOST}".insteadOf
      ssh://git@${CI_SERVER_HOST}
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform init -upgrade
    - gitlab-terraform plan
    - gitlab-terraform apply
  environment:
    name: ops-$CI_PROJECT_NAME
  resource_group: "${TF_STATE_NAME}"
  # Triggers only from main with the key word bootstrap
  rules:
    - if:
        '$CI_COMMIT_MESSAGE =~ $CHORE_DEPLOY_COMMIT && $CI_COMMIT_BRANCH ==
        $CI_DEFAULT_BRANCH'
      when: always
  variables:
    TF_STATE_NAME: ops-$CI_PROJECT_NAME
    TF_VAR_github_repo_name: $GITHUB_USERNAME/$CI_PROJECT_NAME

